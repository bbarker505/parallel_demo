countiesOR_sp <- sp::as(countiesOR, "Spatial")
countiesOR <- us_counties() %>%
mutate(state_county = paste(state_name, name, sep = "_")) %>%
filter(state_name == "Oregon") %>%
as(countiesOR, "Spatial")
library(dplyr)
library(dplyr)
library(raster)
library(dplyr)
library(raster)
library(USAboundaries)
library(stringr)
Jul_fls <- list.files("./prism_data/july/",
pattern = glob2rx("*201*.bil$*"), full.names = TRUE)
Jul_30yr <- raster("./prism_data/normals/PRISM_tmax_30yr_normal_4kmM2_07_bil.bil")
countiesOR <- us_counties() %>%
mutate(state_county = paste(state_name, name, sep = "_")) %>%
filter(state_name == "Oregon") %>%
as(countiesOR, "Spatial")
countiesOR <- us_counties() %>%
mutate(state_county = paste(state_name, name, sep = "_")) %>%
filter(state_name == "Oregon") %>%
as(., "Spatial")
data.frame(us_counties())
str(data.frame(us_counties()))
countiesOR <- us_counties() %>%
mutate(state_county = paste(state_name, name, sep = "_")) %>%
filter(state_name == "Oregon") %>%
#as(., "Spatial")
sf::as_Spatial(.)
countiesOR
USA <- stack(list.files(path = paste0(getwd(), "/prism_data/annual/"),
pattern = ".bil$*", full.names = TRUE)) # A stack of rasters
OR <- crop(USA, extent(-124.7294, -116.2949, 41.7150, 46.4612)) # Crop the raster stack
OR.90_99 <- OR[[1:10]]
OR.00_10 <- OR[[11:21]]
OR.11_19 <- OR[[22:30]]
OR_sets <- list(OR.90_99, OR.00_10, OR.11_19)
slope_func <- function(r) {
years <- str_split_fixed(names(r), "_", 6)[,5]
if (all(is.na(r))) {
NA
} else {
m <- lm(r ~ years); summary(m)$coefficients[2] # Calculates the slope
}
}
cl.3 <- makeCluster(3)
registerDoParallel(cl.3)
system.time(
slopes <- foreach(set = OR_sets,
.packages = c("raster", "stringr")) %dopar% {
calc(set, slope_func)
}
)
library(foreach)
library(doParallel)
system.time(
slopes <- foreach(set = OR_sets,
.packages = c("raster", "stringr")) %dopar% {
calc(set, slope_func)
}
)
names(slopes[[1]] <- c("decade.1990_1999"))
slopes[[1]]
names(slopes[[2]]) <- c("decade.2000_2010")
names(slopes[[3]]) <- c("decade.2011_2019")
plot(stack(slopes[[1]], slopes[[2]]), slopes[[3]])
OR_sets
names(slopes)
slopes
length(slopes)
names(slopes)
names(slopes[[1:3]])
names(slopes[[1]])
plot(slopes[[1]])
plot(slopes)
slopes
system.time(
slopes <- mclapply(OR_sets, function(x) {
calc(x, slope_func)
}, mc.cores = 3)
)
slopes
names(slopes)
OR_sets
OR.90_99
OR_sets
names(OR_sets) <- c("OR.90_99", "OR.00_10", "OR.11_19")
system.time(
slopes <- mclapply(OR_sets, function(x) {
calc(x, slope_func)
}, mc.cores = 3)
)
slopes
plot(stack(slopes[[1]], slopes[[2]]), slopes[[3]])
slopes[[1
]]
plot(slopes[[1]])
plot(slopes[[1]], slopes[[2]])
plot(stack(slopes[[1]], slopes[[2]]))
names(slopes)
slopes[[1]]
names(slopes[[1]] <- c("decade.1990_1999"))
slopes[[1]]
system.time(
slopes <- mclapply(OR_sets, function(x) {
calc(x, slope_func)
}, mc.cores = 3)
)
names(slopes[[1]]) <- c("dec.1990_1999")
names(slopes[[2]]) <- c("dec.2000_2010")
names(slopes[[3]]) <- c("dec.2011_2019")
plot(stack(slopes[[1]], slopes[[2]]), slopes[[3]])
slopes
stack(slopes[[1]], slopes[[2]]), slopes[[3]])
stack(slopes[[1]], slopes[[2]], slopes[[3]])
stack(slopes[[1]], slopes[[2]], slopes[[3]])
plot(stack(slopes[[1]], slopes[[2]], slopes[[3]]))
